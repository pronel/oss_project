#include <stdio.h>
#include<stdlib.h>
#include<string.h>
#include<conio.h>

#define MAXSTAGE 5

 

int map() {#include <stdio.h>
#include<string.h>
#include<stdlib.h>
#define MAXSTAGE 5

#ifndef MAP_H 
#define MAP_H
char round[MAXSTAGE][10][34] = {
	{
		" #############",
		" ########  ####",
		" ##o      #####",
		" ##       ####",
		" ##       ##",
		" ####      ##",
		" ######     *##",
		" ###  $  ###",
		" ###       ###",
		" ############"
	},
	{
		" ##########",
		" ### o ##",
		" ###    o ###",
		" ##       ###",
		" ####    # #",
		" ##  $  $  #",
		" ##  ##   #",
		" ##   *  ###",
		" ###    ####",
		" ###########"
	},
	{
		" ################",
		" ################",
		" ####o##oo#######",
		" ##         #  #####",
		" ##   # $     #######",
		" ##   $  $  #######",
		" ##*   ##   ######",
		" ##      #######",
		" ################",
		" ################"
	},
	{
		" ###################",
		" ####           #####",
		" #######      #####",
		" #o#o#  $$  ######",
		" # o o      # ######",
		" #       ##   ####",
		" #   #  $ $ ######",
		" # ## *     #########",
		" #####    ########",
		" #################"
	},
	{
		" #########################",
		" ############o o o     ##",
		" ######            ########",
		" ###    #####      o####",
		" ##  $      #############",
		" ##   #   $ #############",
		" ## #  #   #      o#######",
		" ### $  $   #############",
		" ## * # $    #############",
		" #########################",
	}
};

typedef struct stage {
	char map[10][34];
}STAGE;

void map(int sta,stage *st) {
	int a,b;
	for (a = 0; a < 10; a++) {
		for (b = 0; b < 34;b++){
			st->map[a][b] = round[sta][a][b];
		}
		st->map[a][34] = '\0';
	}
}
#endif

  char arStage[MAXSTAGE][10][34]={
		 {
		  "#############",
		  "########  ####",
		  "##o      #####",
		  "##       ####",
		  "##       ##",
		  "####      ##",
		  "######     *##",
		  "###  ¤  ##",
		  "###       ###",
		  "############"

		 },
		 { 
		  "##########",
		  "###    o ##",
		  "###    o ###",
		  "##       ###",
		  "####    # #",
		  "##  ¤¤  #",
		  "##  ##   #",
		  "##   *  ###",
		  "###    ####",
		 "###########"
		 },
		 { 
		  "################",
		  "################",
		  "####o##oo#######",
		  "##         #  #####",
		  "##   # ¤     #######",
		  "##   ¤ ¤  #######",
		  "##*   ##   ######",
		  "##      #######",
		  "################",
		  "################"
	  },	
		 {
		  "###################",
		  "####           #####",
		  "#######      #####",
		  "#o#o#  ¤¤  ######",
		  "# o o      # ######",
		  "#       ##   ####",
		  "# # #  ¤ ¤ ######",
		  "# ## *     #########",
		  "#####    ########",
		  "#################"
	  },
		 { 
		  "#############################",
		  "#########################",
		  "############o o o     ##",
		  "######         ###########",
		  "###    #####      o####",
		  "##  ¤      #############",
		  "##   #   ¤ #############",
		  "## #  #   #      o#######",
		  "### ¤  ¤   #############",
		  "## * # ¤    #############",
	      }	
		};

  	
  int i;
	int x,y;
	i = getch();
	for(y=0;y<10;y++){
		for(x=0;x<34;x++){
			printf("%c",arStage[i][y][x]);
		}
		printf("\n");
	}

	return 0;
}
